.game {
  width: 100%;
  max-width: var(--game-max-width);
  margin: 0 auto;
  height: calc(100% - var(--header-height));
  display: flex;
  flex-direction: column;
}

.boardContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-grow: 1;
  overflow: hidden;
}

.board {
  display: grid;
  grid-template-rows: repeat(6, 1fr);
  grid-gap: 5px;
  padding: 10px;
  box-sizing: border-box;
}

.buttonIcon {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0 4px;
}

.keyboard {
  margin: 0 8px;
  user-select: none;
}

.gridRow {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-gap: 5px;
}

.gridRow[data-animation="shake"] {
  animation-name: Shake;
  animation-duration: 300ms;
}

.row {
  display: flex;
  width: 100%;
  margin: 0 auto 8px;
  /* https://stackoverflow.com/questions/46167604/ios-html-disable-double-tap-to-zoom */
  touch-action: manipulation;
}

.buttonKey {
  font-family: inherit;
  font-weight: bold;
  border: 0;
  padding: 0;
  margin: 0 6px 0 0;
  height: 58px;
  border-radius: 4px;
  cursor: pointer;
  user-select: none;
  background-color: var(--key-bg);
  color: var(--key-text-color);
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  text-transform: uppercase;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0.3);
}

.buttonKey:focus {
  outline: none;
}

.buttonKey.fade {
  transition: background-color 0.1s ease, color 0.1s ease;
}

.buttonKey:last-of-type {
  margin: 0;
}

.half {
  flex: 0.5;
}

.one {
  flex: 1;
}

.oneAndAHalf {
  flex: 1.5;
  font-size: 12px;
}

.two {
  flex: 2;
}

.buttonKey[data-state="correct"] {
  background-color: var(--key-bg-correct);
  color: var(--key-evaluated-text-color);
}

.buttonKey[data-state="present"] {
  background-color: var(--key-bg-present);
  color: var(--key-evaluated-text-color);
}

.buttonKey[data-state="absent"] {
  background-color: var(--key-bg-absent);
  color: var(--key-evaluated-text-color);
}

@keyframes Bounce {
  0%,
  20% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-30px);
  }
  50% {
    transform: translateY(5px);
  }
  60% {
    transform: translateY(-15px);
  }
  80% {
    transform: translateY(2px);
  }
  100% {
    transform: translateY(0);
  }
}

@keyframes Shake {
  10%,
  90% {
    transform: translateX(-1px);
  }

  20%,
  80% {
    transform: translateX(2px);
  }

  30%,
  50%,
  70% {
    transform: translateX(-4px);
  }

  40%,
  60% {
    transform: translateX(4px);
  }
}

.keyboardGame {
  margin-top: 10px;
  height: var(--keyboard-height);
}

.tile {
  width: 100%;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;
  line-height: 2rem;
  font-weight: bold;
  vertical-align: middle;
  box-sizing: border-box;
  color: var(--tile-text-color);
  text-transform: uppercase;
  user-select: none;
}

.tile::before {
  content: "";
  display: inline-block;
  padding-bottom: 100%;
}

/* Allow tiles to be smaller on small screens */
@media (max-height: 600px) {
  .tile {
    font-size: 1em;
    line-height: 1em;
  }
}

.tile[data-state="empty"] {
  border: 2px solid var(--color-tone-4);
}

.tile[data-state="tbd"] {
  background-color: var(--color-tone-7);
  border: 2px solid var(--color-tone-3);
  color: var(--color-tone-1);
}

.tile[data-state="correct"] {
  background-color: var(--color-correct);
}

.tile[data-state="above"] {
  background-color: var(--color-present);
}

.tile[data-state="absent"] {
  background-color: var(--color-absent);
}

.tile[data-state="before"] {
  background-color: var(--color-before);
}

.tile[data-state="after"] {
  background-color: var(--color-after);
}

.tile[data-animation="pop"] {
  animation-name: PopIn;
  animation-duration: 100ms;
}

@keyframes PopIn {
  from {
    transform: scale(0.8);
    opacity: 0;
  }

  40% {
    transform: scale(1.1);
    opacity: 1;
  }
}

.tile[data-animation="flip-in"] {
  animation-name: FlipIn;
  animation-duration: 250ms;
  animation-timing-function: ease-in;
  animation-fill-mode: forwards;
}

@keyframes FlipIn {
  0% {
    transform: rotateX(0);
  }
  100% {
    transform: rotateX(-90deg);
  }
}

.tile[data-animation="flip-out"] {
  animation-name: FlipOut;
  animation-duration: 250ms;
  animation-timing-function: ease-in;
}

@keyframes FlipOut {
  0% {
    transform: rotateX(-90deg);
  }
  100% {
    transform: rotateX(0);
  }
}
